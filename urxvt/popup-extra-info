#!perl

use feature qw(say);
use experimental qw(signatures);

use POSIX qw(strftime);

my @SUFFIXES = (
    [T  => 4],
    [G  => 3],
    [M  => 2],
    [K  => 1],
    ['' => 0],
);

sub format_bytes($bytes) {
    for my $suffix_tuple (@SUFFIXES) {
        my ( $suffix, $exp ) = @$suffix_tuple;
        my $si_mult = 1_000 ** $exp;
        my $iec_mult = 1_024 ** $exp;
        if($bytes > $si_mult) {
            return sprintf("%.2f%s %.2f%s\n", $_ / $si_mult, $suffix . 'B', $_ / $iec_mult, $suffix . 'iB');
        }
    }

    return $bytes;
}

sub on_start($self) {
    push @{ $self->{'term'}{'selection_popup_hook'} }, sub ($popup) {
        if(/^\d{10}$/) {
            $popup->add_title(strftime('%Y-%m-%d %H:%M:%S %z', localtime($_)));
        }

        if(/^\d{13}$/) {
            $popup->add_title(strftime('%Y-%m-%d %H:%M:%S %z', localtime($_ / 1_000)));
        }

        if(/^\d{16}$/) {
            $popup->add_title(strftime('%Y-%m-%d %H:%M:%S %z', localtime($_ / 1_000_000)));
        }

        if(/^\d+$/) {
            $popup->add_title(format_bytes($_));
        }

        if(m{\n}) {
            my $line_count = split /\n/, $_;
            $popup->add_title("$line_count lines");
        }


        return;
    };
}
